package main

import (
	"encoding/json"
	"fmt"
	"github.com/iproduct/coursego/fmi-2023-04-methods-interfaces-lab/books"
	"io"
	"log"
	"net/http"
)

func main() {
	//resp, err := http.Get("http://localhost:8080/headers")
	//resp, err := http.Get("http://google.com")
	req, err := http.NewRequest("GET", "https://www.googleapis.com/books/v1/volumes?q=golang)", nil)
	//if err != nil {
	//	log.Fatal(err)
	//}
	req.Header.Add("Accept", "Accept: application/json")
	//req.Header.Add("Custom-Header", "Custom value")
	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Println("Response status:", resp.Status)
	defer resp.Body.Close()
	//scanner := bufio.NewScanner(resp.Body)
	//for i := 0; scanner.Scan() && i < 15; i++ {
	//	fmt.Println(scanner.Text())
	//}
	//if err = scanner.Err(); err != nil {
	//	log.Fatal(err)
	//}

	// Parse JSON books data
	body, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatal(err)
	}
	var goBooks books.AutoGenerated
	if err := json.Unmarshal(body, &goBooks); err != nil {
		log.Fatal(err)
	}
	for i, book := range goBooks.Items {
		fmt.Printf("%d: %s: %#v: %s\n", i+1, book.VolumeInfo.IndustryIdentifiers[0].Identifier, book.VolumeInfo.Title, book.VolumeInfo.Subtitle)
	}

}
